{"ast":null,"code":"var _jsxFileName = \"/home/alex/jsGit/petrReact/ch06/React_step_2/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App, Clock } from './App';\nimport Button from './Button.js'; //import Clock from './App';\n//import reportWebVitals from './reportWebVitals';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Myapp1 extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Clock, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Myapp1, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n/******************************** функциональны компоненты****************/\n\n/* function Greet() {\n    let phrase = \"My phrase in variable\"\n    return(\n        <div>\n        <h2> Hello Alex in react1ptr/index.js!!!</h2>\n        <h3> Hello {phrase}</h3>\n        </div>\n    )\n};\n// маленький компонент в REACT\nfunction MyProperties(props) {\n\n    return(\n        <div>\n            <h4> My {props.MyProperty} My name is {props.name}</h4>\n            <h4> </h4>\n        </div>\n    )\n};\n// можно объеденить компоненты в одну конструкцию/вызов\n// возьмём компонент и использовать его с разными параметрами\nfunction GreetAll() {\n\n    return(\n        <div>\n            <h4> <MyProperties MyProperty=\"Большая конструкция\" name=\"Alex\"/></h4>\n            <h4> <MyProperties MyProperty=\"Большая конструкция\" name=\"Ivan\"/></h4>\n            <h4> <MyProperties MyProperty=\"Большая конструкция\" name=\"Kostja\"/></h4>\n        </div>\n    )\n};\n// можно поместить функцию в const\nconst element =  <MyProperties MyProperty=\"Функция в const\" name=\"Alex\"/>\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <Greet />\n    <MyProperties MyProperty=\"Свойства в функции\" name=\"Alex\"/>\n      {element}\n    <GreetAll />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n */","map":{"version":3,"sources":["/home/alex/jsGit/petrReact/ch06/React_step_2/src/index.js"],"names":["React","ReactDOM","App","Clock","Button","Myapp1","Component","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,SAAQC,GAAR,EAAaC,KAAb,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CACA;AACA;;;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACnCC,EAAAA,MAAM,GAAG;AACP,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMD;;AARkC;;AAWrCN,QAAQ,CAACM,MAAT,eACI,QAAC,KAAD,CAAO,UAAP;AAAA,0BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALJ;AAQA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App, Clock} from './App';\nimport Button from './Button.js';\n//import Clock from './App';\n//import reportWebVitals from './reportWebVitals';\n\nclass Myapp1 extends React.Component {\n  render() {\n    return (\n        <div className=\"wrapper\">\n            <Clock />\n            <Button />\n        </div>\n    );\n  }\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n        <Myapp1 />\n        </React.StrictMode>,\n    document.getElementById('root')\n);\n\n/******************************** функциональны компоненты****************/\n/* function Greet() {\n    let phrase = \"My phrase in variable\"\n    return(\n        <div>\n        <h2> Hello Alex in react1ptr/index.js!!!</h2>\n        <h3> Hello {phrase}</h3>\n        </div>\n    )\n};\n// маленький компонент в REACT\nfunction MyProperties(props) {\n\n    return(\n        <div>\n            <h4> My {props.MyProperty} My name is {props.name}</h4>\n            <h4> </h4>\n        </div>\n    )\n};\n// можно объеденить компоненты в одну конструкцию/вызов\n// возьмём компонент и использовать его с разными параметрами\nfunction GreetAll() {\n\n    return(\n        <div>\n            <h4> <MyProperties MyProperty=\"Большая конструкция\" name=\"Alex\"/></h4>\n            <h4> <MyProperties MyProperty=\"Большая конструкция\" name=\"Ivan\"/></h4>\n            <h4> <MyProperties MyProperty=\"Большая конструкция\" name=\"Kostja\"/></h4>\n        </div>\n    )\n};\n// можно поместить функцию в const\nconst element =  <MyProperties MyProperty=\"Функция в const\" name=\"Alex\"/>\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <Greet />\n    <MyProperties MyProperty=\"Свойства в функции\" name=\"Alex\"/>\n      {element}\n    <GreetAll />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n */\n"]},"metadata":{},"sourceType":"module"}